  version: '3.8'
  services:
    apps:
      image: node:18-alpine
      volumes:
        - .:/app
      working_dir: /app
      command: node --watch server.js
      ports:
        - "${PORT:-3000}:3000"
      environment:
        - NODE_ENV=dev
        - PORT=${PORT}
        - EXP_TIME=${EXP_TIME}
        - DB_HOST=${DB_HOST}
        - DB_USER=${DB_USER_PRO}
        - DB_PASSWORD=${DB_PASSWORD_PRO}
        - DB_NAME=${DB_NAME_PRO}
        - ES_HOST=${ES_HOST}
        - KAFKA_BROKER=kafka:9092
        - ACCESS_SECRET_KEY=${ACCESS_SECRET_KEY}
        - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY}
        - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
        - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
        - EMAIL_HOST=${EMAIL_HOST}
        - EMAIL_PORT=${EMAIL_PORT}
        - EMAIL_USERNAME=${EMAIL_USERNAME}
        - EMAIL_PASSWORD=${EMAIL_PASSWORD}
        - FRONTEND_URL=${FRONTEND_URL}
        - REDIS_URL=${REDIS_URL} # ThÃªm Redis URL
        - REDIS_USERNAME=${REDIS_USERNAME}
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PORT=${REDIS_PORT}
      depends_on:
        kafka:
          condition: service_healthy
      networks:
        - dev-networks
      mem_limit: 512m
      cpus: "0.5"

    zookeeper:
      image: confluentinc/cp-zookeeper:7.3.0
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      volumes:
        - zookeeper-data:/var/lib/zookeeper/data
        - zookeeper-log:/var/lib/zookeeper/log
      networks:
        - dev-networks
      mem_limit: 256m
      cpus: "0.25"
      healthcheck:
        test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
        interval: 10s
        timeout: 5s
        retries: 5

    kafka:
      image: confluentinc/cp-kafka:7.3.0
      depends_on:
        zookeeper:
          condition: service_healthy
      ports:
        - "9092:9092"
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_LOG_RETENTION_HOURS: 24
      volumes:
        - kafka-data:/var/lib/kafka/data
      networks:
        - dev-networks
      mem_limit: 1g
      cpus: "1.0"
      healthcheck:
        test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
        interval: 15s
        timeout: 10s
        retries: 10

    kafka-connect:
      image: debezium/connect:2.7.0.Final
      depends_on:
        kafka:
          condition: service_healthy
      ports:
        - "8083:8083"
      environment:
        BOOTSTRAP_SERVERS: kafka:9092
        GROUP_ID: connect-cluster
        CONFIG_STORAGE_TOPIC: connect-configs
        OFFSET_STORAGE_TOPIC: connect-offsets
        STATUS_STORAGE_TOPIC: connect-status
        KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
        VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
        KEY_CONVERTER_SCHEMAS_ENABLE: "false"
        VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
        CONNECT_PLUGIN_PATH: /kafka/connect
      volumes:
        - ./src/connect-plugins:/kafka/connect
        - ./src/connect-plugins/ca.pem:/aiven-ca.pem
      networks:
        - dev-networks
      mem_limit: 1g
      cpus: "1.0"
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8083/"]
        interval: 15s
        timeout: 10s
        retries: 10

    kafka-ui:
      image: provectuslabs/kafka-ui:latest
      depends_on:
        kafka:
          condition: service_healthy
      ports:
        - "8080:8080"
      environment:
        KAFKA_CLUSTERS_0_NAME: local
        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
        KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      networks:
        - dev-networks
      mem_limit: 256m
      cpus: "0.25"

  networks:
    dev-networks:
      driver: bridge

  volumes:
    zookeeper-data:
    zookeeper-log:
    kafka-data: